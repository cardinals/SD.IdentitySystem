<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <configSections>
    <!--EntityFramework节点-->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!--依赖注入提供者配置节点-->
    <section name="injectionProviderConfiguration" type="SD.IOC.Core.Configuration.InjectionProviderConfiguration,SD.IOC.Core" />
    <!--依赖注入注册配置节点-->
    <section name="injectionRegisterConfiguration" type="SD.IOC.Core.Configuration.InjectionRegisterConfiguration,SD.IOC.Core" />
    <!--缓存提供者配置节点-->
    <section name="cacheProviderConfiguration" type="SD.CacheManager.CacheProviderConfiguration,SD.CacheManager"/>
    <!--Redis服务器配置节点-->
    <section name="redisConfiguration" type="SD.Toolkits.RedisConfiguration,SD.Toolkits.Redis" />
  </configSections>

  <!--连接字符串-->
  <connectionStrings>
    <!--默认连接字符串-->
    <add name="DefaultConnection" connectionString="Data Source=.;Initial Catalog=SD_UAC;User Id=sa;Password=shdev2014@;MultipleActiveResultSets=true;" providerName="System.Data.SqlClient" />
    <!--日志连接字符串-->
    <add name="LogConnection" connectionString="Data Source=192.168.3.23;Initial Catalog=ShSoft_Log;User Id=sa;Password=shdev2014@;MultipleActiveResultSets=true;" providerName="System.Data.SqlClient" />
  </connectionStrings>

  <!--应用程序配置-->
  <appSettings>
    <!--编号生成器连接字符串-->
    <!--键：约定；值：connectionString name-->
    <add key="NoConnection" value="DefaultConnection" />
    <!--日志连接字符串-->
    <!--键：约定；值：connectionString name-->
    <add key="LogConnection" value="LogConnection" />
    <!--RavenDB连接字符串名称-->
    <!--键：约定；值：connectionString name-->
    <add key="RavenEventConnection" value="RavenConnection" />
    <!--实体所在程序集-->
    <add key="EntityAssembly" value="SD.UAC.Domain" />
    <!--实体配置所在程序集-->
    <add key="EntityConfigAssembly" value="SD.UAC.Repository" />
    <!--领域事件源所在程序集-->
    <add key="EventSourceAssembly" value="SD.UAC.Domain" />
    <!--数据表名前缀-->
    <add key="TablePrefix" value="" />
    <!--是否开启自动数据迁移，是：true，否：false-->
    <add key="AutoMigration" value="false" />
  </appSettings>

  <!--缓存提供者配置-->
  <cacheProviderConfiguration type="SD.CacheManager.RedisProvider" assembly="SD.CacheManager.Redis"/>

  <!--依赖注入提供者配置，默认采用Autofac-->
  <injectionProviderConfiguration type="SD.IOC.Core.AutofacProvider.AutofacInstanceResolver" assembly="SD.IOC.Core" />

  <!--依赖注入注册配置-->
  <injectionRegisterConfiguration>
    <!--As接口程序集列表-->
    <asInterfaceAssemblies>
      <assembly name="SD.UAC.AppService" />
      <assembly name="SD.UAC.DomainService" />
      <assembly name="SD.UAC.DomainEventHandler" />
      <assembly name="SD.UAC.Repository" />
    </asInterfaceAssemblies>

    <!--As自身程序集列表-->
    <asSelfAssemblies>
      <assembly name="SD.UAC.AppService" />
    </asSelfAssemblies>

    <!--As接口类型列表-->
    <asInterfaceTypes>
      <type name="ShSoft.Infrastructure.EventStoreProvider.RedisStoreProvider" assembly="ShSoft.Infrastructure.EventStoreProvider.Redis" />
      <type name="ShSoft.Infrastructure.Repository.EntityFramework.DbCleaner" assembly="ShSoft.Infrastructure.Repository.EntityFramework" />
    </asInterfaceTypes>

    <!--As基类类型列表-->
    <asBaseTypes>
      <type name="SD.UAC.Repository.Base.DbSession" assembly="SD.UAC.Repository" />
    </asBaseTypes>

    <!--As自身类型列表-->
    <asSelfTypes>
      <type name="SD.UAC.Domain.Mediators.DomainServiceMediator" assembly="SD.UAC.Domain" />
      <type name="SD.UAC.Domain.Mediators.RepositoryMediator" assembly="SD.UAC.Domain" />
    </asSelfTypes>
  </injectionRegisterConfiguration>

  <!--Redis服务器配置-->
  <redisConfiguration>
    <!--读写服务器地址列表-->
    <readWriteServers>
      <server name="WriteHost" host="192.168.3.27" port="6379" password="" />
    </readWriteServers>
    <!--只读服务器地址列表-->
    <readOnlyServers>
      <server name="ReadHost" host="192.168.3.27" port="6379" password="" />
    </readOnlyServers>
  </redisConfiguration>

  <!--WCF配置-->
  <system.serviceModel>
    <!--WCF服务配置，手动增加service节点-->
    <services>
      <!--身份认证服务契约配置-->
      <service behaviorConfiguration="DefaultBehavior" name="SD.UAC.AppService.Implements.AuthenticationContract">
        <endpoint binding="wsHttpBinding" bindingConfiguration="DefaultBinding" contract="SD.UAC.IAppService.Interfaces.IAuthenticationContract" />
      </service>
      <!--用户服务契约配置-->
      <service behaviorConfiguration="DefaultBehavior" name="SD.UAC.AppService.Implements.UserContract">
        <endpoint binding="wsHttpBinding" bindingConfiguration="DefaultBinding" contract="SD.UAC.IAppService.Interfaces.IUserContract" />
      </service>
      <!--权限服务契约配置-->
      <service behaviorConfiguration="DefaultBehavior" name="SD.UAC.AppService.Implements.AuthorizationContract">
        <endpoint binding="wsHttpBinding" bindingConfiguration="DefaultBinding" contract="SD.UAC.IAppService.Interfaces.IAuthorizationContract" />
      </service>
    </services>
    <!--WCF客户端配置，手动增加endpoint节点-->
    <client>
    </client>
    <!--WCF绑定配置，配置好无需修改-->
    <bindings>
      <wsHttpBinding>
        <!--默认绑定配置-->
        <binding name="DefaultBinding" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00">
          <security mode="None">
            <transport clientCredentialType="None" />
            <message clientCredentialType="None" />
          </security>
        </binding>
        <!--事务绑定配置-->
        <binding name="TransactionBinding" transactionFlow="true" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" closeTimeout="00:10:00" openTimeout="00:10:00" receiveTimeout="00:10:00" sendTimeout="00:10:00">
          <security mode="None">
            <transport clientCredentialType="None" />
            <message clientCredentialType="None" />
          </security>
          <reliableSession enabled="true" ordered="true" inactivityTimeout="00:10:00" />
        </binding>
      </wsHttpBinding>
    </bindings>
    <!--WCF行为配置，配置好无需修改-->
    <behaviors>
      <serviceBehaviors>
        <behavior name="DefaultBehavior">
          <!--是否允许get请求访问-->
          <serviceMetadata httpGetEnabled="true" />
          <!--是否显示异常信息-->
          <serviceDebug includeExceptionDetailInFaults="true" />
          <dataContractSerializer maxItemsInObjectGraph="65536000" />
          <!--依赖注入扩展配置-->
          <injection />
          <!--初始化扩展配置-->
          <initialization />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <!--WCF扩展配置，配置好无需修改-->
    <extensions>
      <behaviorExtensions>
        <!--依赖注入扩展配置-->
        <add name="injection" type="SD.IOC.Integration.WCF.IocServiceBehaviorElement, SD.IOC.Integration.WCF"/>
        <!--初始化扩展配置-->
        <add name="initialization" type="ShSoft.Infrastructure.WCF.Server.InitializationBehaviorElement, ShSoft.Infrastructure.WCF.Server" />
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>

  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
    <customErrors mode="Off" />
  </system.web>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Autofac" publicKeyToken="17863af14b0044da" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.0" newVersion="3.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="ICSharpCode.SharpZipLib" publicKeyToken="1b03e6acf1164f73" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-0.86.0.518" newVersion="0.86.0.518" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>

</configuration>